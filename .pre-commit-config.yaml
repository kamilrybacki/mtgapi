repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        name: ruff (lint)
        args: ["--config", "pyproject.toml"]
      - id: ruff-format
        name: ruff (format)
      - id: ruff
        name: ruff (auto-fix)
        alias: ruff-fix
        stages: [manual]
        args: ["--config", "pyproject.toml", "--fix"]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
      - id: mypy
        name: mypy (strict)
        additional_dependencies: []
        args: ["--config-file", "pyproject.toml"]
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ["-q", "-r", "src", "--exclude", "tests"]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
  - repo: local
    hooks:
      - id: poetry-lock-no-update
        name: poetry lock --no-update (sanity)
        entry: bash -c 'poetry lock --no-update >/dev/null && echo "Poetry lock consistent"'
        language: system
        pass_filenames: false
        stages: [manual]
        description: "Ensures lockfile can be regenerated without updates (supply-chain integrity)."
