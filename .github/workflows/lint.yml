name: Lint and Typecheck 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  POETRY_VERSION: "2.*"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  POETRY_VIRTUALENVS_CREATE: "true"

jobs:
  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup environment (Poetry + caches)
        uses: ./.github/actions/setup-poetry
        with:
          python-version: '3.12'
          poetry-version: ${{ env.POETRY_VERSION }}
          install-deps: 'true'
          cache-key-suffix: '-mypy'

      - name: Run MyPy
        run: poetry run mypy . --config-file pyproject.toml

  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup environment (Poetry + caches)
        uses: ./.github/actions/setup-poetry
        with:
          python-version: '3.12'
          poetry-version: ${{ env.POETRY_VERSION }}
          install-deps: 'true'
          cache-key-suffix: '-ruff'

      - name: Run Ruff
        run: poetry run ruff check --config pyproject.toml

  bandit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup environment (Poetry + caches)
        uses: ./.github/actions/setup-poetry
        with:
          python-version: '3.12'
          poetry-version: ${{ env.POETRY_VERSION }}
          install-deps: 'true'
          cache-key-suffix: '-bandit'
      - name: Run Bandit (security scan)
        run: poetry run bandit -q -r src -f txt --exclude tests || (echo "Bandit scan failed" && exit 1)
