name: docker-publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Resolve base image digest
        id: baseimage
        run: |
          set -euo pipefail
          REF="python:3.12-slim"
          DIGEST=$(docker pull "$REF" | grep Digest | awk '{print $2}')
          echo "ref=$REF" >> "$GITHUB_OUTPUT"
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
          echo "Resolved $REF -> $DIGEST"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: deploy/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=${{ steps.baseimage.outputs.ref }}@${{ steps.baseimage.outputs.digest }}

      - name: Install Trivy
        if: github.ref == 'refs/heads/main'
        run: |
          sudo apt-get update -y
            && sudo apt-get install -y wget
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb stable main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y && sudo apt-get install -y trivy

      - name: Trivy vulnerability scan (image)
        if: github.ref == 'refs/heads/main'
        run: |
          trivy image --severity CRITICAL,HIGH --ignore-unfixed --exit-code 0 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest || true

      - name: Summarize
        run: |
          echo "Published image tags:"
          echo '${{ steps.meta.outputs.tags }}'
