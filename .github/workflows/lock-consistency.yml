name: lock-consistency

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '15 4 * * *'
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  check-lock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry

      - name: Install plugin (export) & deps (no dev needed)
        run: |
          poetry self add poetry-plugin-export || true
          poetry install --no-root --only main

      - name: Capture pre-lock hash
        id: before
        run: |
          echo "hash=$(sha256sum poetry.lock | cut -d' ' -f1)" >> "$GITHUB_OUTPUT"

      - name: Run lock to detect drift (no version bumps)
        run: |
          # Capture original contents
          cp poetry.lock poetry.lock.original
          # Recreate lock deterministically; Poetry will only rewrite if resolution differs
          poetry lock
          if ! diff -q poetry.lock.original poetry.lock >/dev/null; then
            echo "::error::Lock drift detected. Run 'poetry lock' locally and commit the updated poetry.lock." >&2
            echo "-- Begin Diff --"
            git --no-pager diff --color=always --no-index poetry.lock.original poetry.lock || true
            echo "-- End Diff --"
            exit 1
          fi
          echo "Lockfile stable (no drift)."

      - name: Capture post-run hash
        id: compare
        run: |
          # File should match original when stable; we recompute hash for summary.
          after_hash=$(sha256sum poetry.lock | cut -d' ' -f1)
          echo "after_hash=$after_hash" >> "$GITHUB_OUTPUT"

      - name: Summarize
        if: always()
        run: |
          cat >> "$GITHUB_STEP_SUMMARY" <<EOF
          ### Lock Consistency Report

          Original hash: \
          	${{ steps.before.outputs.hash }}
          After hash: \
          	${{ steps.compare.outputs.after_hash }}

          Result: $([ "${{ steps.before.outputs.hash }}" = "${{ steps.compare.outputs.after_hash }}" ] && echo "✅ Stable" || echo "❌ Drift Detected")
          EOF
